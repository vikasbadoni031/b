<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Vikas Badoni</title>
    <link>https://vikasbadoni031.github.io/b/posts.html</link>
    <description>Recent content in Posts on Vikas Badoni</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Nov 2024 19:23:09 +0530</lastBuildDate>
    <atom:link href="https://vikasbadoni031.github.io/b/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang CLI plugin to extend kubectl functionality</title>
      <link>https://vikasbadoni031.github.io/b/posts/kubectl-plugin.html</link>
      <pubDate>Fri, 29 Nov 2024 19:23:09 +0530</pubDate>
      <guid>https://vikasbadoni031.github.io/b/posts/kubectl-plugin.html</guid>
      <description>&lt;p&gt;Extending the functionality of kubectl by creating a custom plugin using the popular Go package, Cobra. Kubernetes offers extensive command-line tools, but sometimes you need additional commands tailored to your specific workflow. By using Go and Cobra, you can easily add your own commands to kubectl, helping with automating repetitive tasks.&lt;/p&gt;&#xA;&lt;p&gt;This application shows how to use the Cobra package, focusing on implementing a simple use case: retrieving deployments based on user input parameters. Based on the provided input, the app queries the cluster to find matching deployments and displays the requested memory and CPU. If no resource requests are set, it will display &amp;ldquo;None.&amp;rdquo; This functionality helps easily identify problematic deployments within the system. Additionally, the functionality is extensible to support other object types and custom requirements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Different Kubernetes interactions using client-go library</title>
      <link>https://vikasbadoni031.github.io/b/posts/client-go.html</link>
      <pubDate>Thu, 24 Oct 2024 19:23:15 +0530</pubDate>
      <guid>https://vikasbadoni031.github.io/b/posts/client-go.html</guid>
      <description></description>
    </item>
    <item>
      <title>TCP load Balancer using socket programming</title>
      <link>https://vikasbadoni031.github.io/b/posts/tcp-lb.html</link>
      <pubDate>Tue, 24 Sep 2024 19:23:12 +0530</pubDate>
      <guid>https://vikasbadoni031.github.io/b/posts/tcp-lb.html</guid>
      <description></description>
    </item>
    <item>
      <title>Kubernetes Operator to scale applications based on custom CRD</title>
      <link>https://vikasbadoni031.github.io/b/posts/kube-crd.html</link>
      <pubDate>Tue, 29 Aug 2023 19:23:09 +0530</pubDate>
      <guid>https://vikasbadoni031.github.io/b/posts/kube-crd.html</guid>
      <description>&lt;p&gt;Kubernetes Operators are powerful tools that allow you to extend the native functionality of Kubernetes by integrating custom logic into the control plane. You can codify application-specific operational knowledge directly into Kubernetes. Using Operarators you can automate application specific operational tasks.&lt;/p&gt;&#xA;&lt;p&gt;In this project we have created a custom operator from scratch using operator-sdk to create the boilerplate code, defining you own CRD&amp;rsquo;s and then providing the custom logic for reconciling the required objects in the cluster.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
